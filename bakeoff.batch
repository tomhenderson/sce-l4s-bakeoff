#
# These tests require six hosts connected in succession, one client,
# four middleboxes and one server:
#
# C (L4S):
#     role: client / sender
#     kernel: L4S (tcp-prague)
#     software: flent, netperf, fping
#     sysctl: net.ipv4.tcp_ecn = 3
# M1:
#     role: middlebox
#     kernel: L4S (sch_dualpi2)
#     sysctl: net.ipv4.ip_forward = 1
# M2:
#     role: middlebox
#     kernel: SCE
#     sysctl: net.ipv4.ip_forward = 1
# S (L4S):
#     role: server / receiver
#     kernel: L4S (tcp-prague)
#     software: netserver
#     sysctl: net.ipv4.tcp_ecn = 3
#

# Global settings
[Batch::global]
# Change below to suit the environment (also see sce and l4s sections)
m1_ssh = M1
m1_left_iface = LEFTM1IFACE
m1_right_iface = RIGHTM1IFACE
m2_ssh = M2
m2_left_iface = LEFTM2IFACE
m2_right_iface = RIGHTM2IFACE
# Don't need to change below here
abstract = yes
m1_ifaces = ${m1_left_iface},${m1_right_iface}
m2_ifaces = ${m2_left_iface},${m2_right_iface}
batch_title = bakeoff
output_path = ${batch_title}-${batch_time}/${batch_name}
socket_stats = yes
length = 60
step_size = 0.1
commands = clear, setup, teardown, process
repetitions = 1
pause = 5
extended_metadata = yes
debug_error = yes
debug_log = yes
ip_version = 4
plot_title = Prague test Scenario ${scenario} \(${draft_name}\)
endpoint_setup = ${c_ssh} \
		\"tcp_metrics\; \
		run_tcpdump ${c_right_iface}\; \
		plot ${output_path}/${data_filename} \\\"${plot_title}\\\" \\\"${plot_subtitle}\\\"\; \
		run_scetrace ${output_path}\; \
		compress ${output_path}\" \
	${s_ssh} \"tcp_metrics\; run_tcpdump ${s_left_iface}\"

# L4S settings
[Batch::l4s]
abstract = yes
c_ssh = client
c_right_iface = RIGHTCLIFACE
s_ssh = dstn
s_left_iface = LEFTDSIFACE
hosts = dstn
draft_name = L4S

# One-flow test settings
[Batch::one-flow]
abstract = yes
test_name = tcp_1up
for_bandwidth_delay = 50Mbit_0ms, 50Mbit_10ms, 50Mbit_80ms
title = b:${batch_name} cc:${cc} q:${queueing} bw:${bandwidth} rtt:${rtt_delay}
test_parameters = tcp_cong_control=${cc};
filename_extra = ${cc}-${bandwidth}-${rtt_delay}
 
[Batch::one-flow-l4s]
abstract = yes
inherits = one-flow, l4s
for_cc = cubic, dctcp, prague

# Two-flow test settings
[Batch::two-flow]
abstract = yes
test_name = tcp_2up
for_bandwidth_delay = 50Mbit_0ms, 50Mbit_10ms, 50Mbit_80ms
title = b:${batch_name} vs:${vs} q:${queueing} bw:${bandwidth} rtt:${rtt_delay}
test_parameters = cc_algos="${cc_algos}"; stream_delays="0,10"; \
	ping_hosts="${hosts},${hosts}"; ping_markings="0,1";
filename_extra = ${vs}-${bandwidth}-${rtt_delay}

[Batch::two-flow-l4s]
abstract = yes
inherits = two-flow, l4s
for_vs = cubic-vs-cubic,
	prague-vs-prague,
	cubic-vs-prague,
	prague-vs-cubic

##########
#
# Scenario 1
#
# This is simply a sanity check to make sure the tools worked.
#

# L4S 1: Sender → L4S middlebox (bottleneck) → L4S Receiver
[Batch::l4s-s1]
abstract = yes
inherits = global
scenario = 1
plot_subtitle = Sender → L4S middlebox \(bottleneck\) → L4S Receiver
queueing = htb(${bandwidth})+dualpi2
setup_args = ${endpoint_setup} \
	${m1_ssh} \
		\"htb_qdisc ${m1_ifaces} ${bandwidth} dualpi2\; \
		netem ${m1_ifaces} ${netem_args}\"

[Batch::l4s-s1-1]
inherits = one-flow-l4s, l4s-s1

[Batch::l4s-s1-2]
inherits = two-flow-l4s, l4s-s1

# Commands
[Command::clear]
exec = ./commands.sh flent_clear ${c_ssh},${m1_ssh},${m2_ssh},${s_ssh}
type = pre
essential = yes

[Command::setup]
exec = ./commands.sh flent_setup "${output_path}/${data_filename}" ${setup_args}
type = pre
essential = yes

[Command::teardown]
exec = ./commands.sh flent_teardown "${output_path}/${data_filename}" ${setup_args}
type = post

[Command::process]
exec = ./commands.sh flent_process "${output_path}/${data_filename}" ${setup_args}
type = post

# ToS args

[Arg::tos_default]
tos = ecn_default
tos_val = 

[Arg::tos_ect1]
tos = ect1
tos_val = 0x1

# Test args

[Arg::tcp_1up]
test_name = tcp_1up

[Arg::tcp_2up]
test_name = tcp_2up

# CC args

[Arg::prague]
cc = prague

[Arg::cubic]
cc = cubic

[Arg::reno]
cc = reno

[Arg::dctcp]
cc = dctcp

# Queueing args

[Arg::flowblind]
queueing = single
flowiso = flowblind

# CC 'vs' args

[Arg::cubic-vs-cubic]
vs = cubic-vs-cubic
cc_algos = cubic,cubic
markings = 0,0

[Arg::cubic-vs-cubic_gamed]
vs = cubic-vs-cubic_gamed
cc_algos = cubic,cubic
markings = 0,4

[Arg::cubic-vs-prague]
vs = cubic-vs-prague
cc_algos = cubic,prague

[Arg::cubic-vs-reno]
vs = cubic-vs-reno
cc_algos = cubic,reno

[Arg::cubic-vs-dctcp]
vs = cubic-vs-dctcp
cc_algos = cubic,dctcp

[Arg::prague-vs-prague]
vs = prague-vs-prague
cc_algos = prague,prague

[Arg::prague-vs-cubic]
vs = prague-vs-cubic
cc_algos = prague,cubic
markings = 0,0

[Arg::prague-vs-cubic_gamed]
vs = prague-vs-cubic_gamed
cc_algos = prague,cubic
markings = 0,4

[Arg::reno-vs-reno]
vs = reno-vs-reno
cc_algos = reno,reno

[Arg::reno-vs-dctcp]
vs = reno-vs-dctcp
cc_algos = reno,dctcp

[Arg::dctcp-vs-dctcp]
vs = dctcp-vs-dctcp
cc_algos = dctcp,dctcp

# Bandwidth-Delay args (generated by bandwidth_delay utility)

[Arg::0.5Mbit_0ms]
bandwidth = 0.5Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::0.5Mbit_1ms]
bandwidth = 0.5Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::0.5Mbit_2ms]
bandwidth = 0.5Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::0.5Mbit_5ms]
bandwidth = 0.5Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::0.5Mbit_10ms]
bandwidth = 0.5Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::0.5Mbit_20ms]
bandwidth = 0.5Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::0.5Mbit_40ms]
bandwidth = 0.5Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 30

[Arg::0.5Mbit_80ms]
bandwidth = 0.5Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 30

[Arg::0.5Mbit_160ms]
bandwidth = 0.5Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 60

[Arg::1Mbit_0ms]
bandwidth = 1Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::1Mbit_1ms]
bandwidth = 1Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::1Mbit_2ms]
bandwidth = 1Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::1Mbit_5ms]
bandwidth = 1Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::1Mbit_10ms]
bandwidth = 1Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::1Mbit_20ms]
bandwidth = 1Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::1Mbit_40ms]
bandwidth = 1Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 30

[Arg::1Mbit_80ms]
bandwidth = 1Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 30

[Arg::1Mbit_160ms]
bandwidth = 1Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 60

[Arg::2Mbit_0ms]
bandwidth = 2Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::2Mbit_1ms]
bandwidth = 2Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::2Mbit_2ms]
bandwidth = 2Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::2Mbit_5ms]
bandwidth = 2Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::2Mbit_10ms]
bandwidth = 2Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::2Mbit_20ms]
bandwidth = 2Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::2Mbit_40ms]
bandwidth = 2Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 30

[Arg::2Mbit_80ms]
bandwidth = 2Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 30

[Arg::2Mbit_160ms]
bandwidth = 2Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 60

[Arg::5Mbit_0ms]
bandwidth = 5Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::5Mbit_1ms]
bandwidth = 5Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::5Mbit_2ms]
bandwidth = 5Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::5Mbit_5ms]
bandwidth = 5Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::5Mbit_10ms]
bandwidth = 5Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::5Mbit_20ms]
bandwidth = 5Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::5Mbit_40ms]
bandwidth = 5Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 40

[Arg::5Mbit_80ms]
bandwidth = 5Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 60

[Arg::5Mbit_160ms]
bandwidth = 5Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 60

[Arg::10Mbit_0ms]
bandwidth = 10Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::10Mbit_1ms]
bandwidth = 10Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::10Mbit_2ms]
bandwidth = 10Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::10Mbit_5ms]
bandwidth = 10Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::10Mbit_10ms]
bandwidth = 10Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::10Mbit_20ms]
bandwidth = 10Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::10Mbit_40ms]
bandwidth = 10Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 40

[Arg::10Mbit_80ms]
bandwidth = 10Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 60

[Arg::10Mbit_160ms]
bandwidth = 10Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 60

[Arg::25Mbit_0ms]
bandwidth = 25Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::25Mbit_1ms]
bandwidth = 25Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::25Mbit_2ms]
bandwidth = 25Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::25Mbit_5ms]
bandwidth = 25Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::25Mbit_10ms]
bandwidth = 25Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::25Mbit_20ms]
bandwidth = 25Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::25Mbit_40ms]
bandwidth = 25Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 40

[Arg::25Mbit_80ms]
bandwidth = 25Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 60

[Arg::25Mbit_160ms]
bandwidth = 25Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 90

[Arg::50Mbit_0ms]
bandwidth = 50Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 40
##length = 4

[Arg::50Mbit_1ms]
bandwidth = 50Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::50Mbit_2ms]
bandwidth = 50Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::50Mbit_5ms]
bandwidth = 50Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::50Mbit_10ms]
bandwidth = 50Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 40

[Arg::50Mbit_20ms]
bandwidth = 50Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 30

[Arg::50Mbit_40ms]
bandwidth = 50Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 60

[Arg::50Mbit_80ms]
bandwidth = 50Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 60

[Arg::50Mbit_160ms]
bandwidth = 50Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 180

[Arg::100Mbit_0ms]
bandwidth = 100Mbit
rtt_delay = 0ms
cake_rtt = 1ms
netem_args = delay 0ms limit 1000000
#length = 30

[Arg::100Mbit_1ms]
bandwidth = 100Mbit
rtt_delay = 1ms
cake_rtt = 1ms
netem_args = delay 0.5ms limit 1000000
#length = 30

[Arg::100Mbit_2ms]
bandwidth = 100Mbit
rtt_delay = 2ms
cake_rtt = 2ms
netem_args = delay 1ms limit 1000000
#length = 30

[Arg::100Mbit_5ms]
bandwidth = 100Mbit
rtt_delay = 5ms
cake_rtt = 5ms
netem_args = delay 2.5ms limit 1000000
#length = 30

[Arg::100Mbit_10ms]
bandwidth = 100Mbit
rtt_delay = 10ms
cake_rtt = 10ms
netem_args = delay 5ms limit 1000000
#length = 30

[Arg::100Mbit_20ms]
bandwidth = 100Mbit
rtt_delay = 20ms
cake_rtt = 100ms
netem_args = delay 10ms limit 1000000
#length = 60

[Arg::100Mbit_40ms]
bandwidth = 100Mbit
rtt_delay = 40ms
cake_rtt = 100ms
netem_args = delay 20ms limit 1000000
#length = 60

[Arg::100Mbit_80ms]
bandwidth = 100Mbit
rtt_delay = 80ms
cake_rtt = 100ms
netem_args = delay 40ms limit 1000000
#length = 120

[Arg::100Mbit_160ms]
bandwidth = 100Mbit
rtt_delay = 160ms
cake_rtt = 100ms
netem_args = delay 80ms limit 1000000
#length = 300
